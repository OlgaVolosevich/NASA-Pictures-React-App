{"version":3,"sources":["assets/images/preloader.svg","components/Calendar/index.jsx","components/MediaContentContainer/Picture/index.jsx","components/MediaContentContainer/Video/index.jsx","components/PreLoader/index.jsx","components/MediaContentContainer/MediaContent.jsx","components/ErrorStab/index.jsx","components/MediaContentContainer/MediaContentContainer.jsx","App.js","index.js"],"names":["module","exports","CalendarContainer","getDate","chosenDate","sessionStorage","Date","parse","getFullYear","getMonth","useState","date","setDate","className","toLocaleDateString","maxDate","onChange","value","Picture","title","url","description","src","alt","Video","frameBorder","allow","allowFullScreen","Preloader","preloader","MediaContent","mediaType","ErrorStab","MediaContentContainer","publication","getPublication","isLoading","setLoading","isError","setError","useEffect","a","fetch","response","status","Error","json","fetchData","media_type","explanation","App","split","reverse","join","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61451b37.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.3ff99de1.svg\";","import React, { useState } from \"react\";\r\nimport \"./calendar.scss\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nconst CalendarContainer = ({ getDate }) => {\r\n  const chosenDate = sessionStorage.chosenDate\r\n    ? new Date(Date.parse(sessionStorage.chosenDate))\r\n    : new Date(new Date().getFullYear(), new Date().getMonth(), 1);\r\n  if (\r\n    chosenDate.getFullYear() === new Date().getFullYear() &&\r\n    chosenDate.getMonth() === new Date().getMonth() &&\r\n    chosenDate.getDate() === new Date().getDate()\r\n  ) {\r\n    delete sessionStorage.chosenDate;\r\n  }\r\n  const [date, setDate] = useState(chosenDate);\r\n  const onChangeDate = (date) => {\r\n    sessionStorage.chosenDate = `${date.getFullYear()}-${\r\n      date.getMonth() + 1\r\n    }-${date.getDate()}`;\r\n    setDate(new Date(Date.parse(sessionStorage.chosenDate)));\r\n    getDate(date.toLocaleDateString());\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar\">\r\n      <h1>Pick any date please</h1>\r\n      <h2>Picked date: {date.toLocaleDateString()}</h2>\r\n      <Calendar maxDate={new Date()} onChange={onChangeDate} value={date} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarContainer;\r\n","import React from \"react\";\r\nimport \"./picture.scss\";\r\n\r\nconst Picture = ({ title, url, description }) => {\r\n  return (\r\n    <div className=\"picture\">\r\n      <h2>{title}</h2>\r\n      <img className=\"picture__img\" src={url} alt={title} />\r\n      <p>{description}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Picture;\r\n","import React from \"react\";\r\nimport \"./video.scss\";\r\n\r\nconst Video = ({ url, title, description }) => {\r\n  return (\r\n    <div className=\"video\">\r\n      <h2>{title}</h2>\r\n      <iframe\r\n        className=\"video__video-area\"\r\n        title=\"title\"\r\n        src={url}\r\n        frameBorder=\"0\"\r\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n        allowFullScreen\r\n      ></iframe>\r\n      <p>{description}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Video;\r\n","import React from \"react\";\r\nimport \"./preloader.scss\";\r\nimport preloader from \"./../../assets/images/preloader.svg\";\r\nconst Preloader = () => {\r\n  return (\r\n    <div className=\"preloader\">\r\n      <img src={preloader} alt=\"preloader\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import React from \"react\";\r\nimport Picture from \"./Picture\";\r\nimport Video from \"./Video\";\r\nimport Preloader from \"../PreLoader\";\r\n\r\nconst MediaContent = ({ mediaType, description, title, url }) => {\r\n  switch (mediaType) {\r\n    case \"image\":\r\n      return <Picture description={description} title={title} url={url} />;\r\n    case \"video\":\r\n      return <Video description={description} title={title} url={url} />;\r\n    default:\r\n      return <Preloader />;\r\n  }\r\n};\r\n\r\nexport default MediaContent;\r\n","import React from \"react\";\r\nimport \"./errorstab.scss\";\r\n\r\nconst ErrorStab = () => {\r\n  return (\r\n    <div className=\"error\">\r\n      <p>\r\n        Ooops! Something went wrong! Please, choose another date or reload the\r\n        page.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorStab;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MediaContent from \"./MediaContent\";\r\nimport Preloader from \"./../PreLoader\";\r\nimport ErrorStab from \"../ErrorStab\";\r\n\r\nconst MediaContentContainer = ({ date }) => {\r\n  const [publication, getPublication] = useState(null);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [isError, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        let response = await fetch(\r\n          `https://api.nasa.gov/planetary/apod?api_key=dTAnmKezLULOPHIybC3o5i20G27BlMKfPL3gFFRT&date=${date}`\r\n        );\r\n        if (response.status !== 200) {\r\n          throw new Error();\r\n        } else {\r\n          response = await response.json();\r\n          getPublication(response);\r\n          setLoading(false);\r\n          setError(false);\r\n        }\r\n      } catch (error) {\r\n        setError(true);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [date]);\r\n\r\n  if (isError) {\r\n    return <ErrorStab />;\r\n  } else {\r\n    return isLoading ? (\r\n      <Preloader />\r\n    ) : (\r\n      <MediaContent\r\n        mediaType={publication.media_type}\r\n        description={publication.explanation}\r\n        title={publication.title}\r\n        url={publication.url}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nexport default MediaContentContainer;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.scss\";\r\nimport CalendarContainer from \"./components/Calendar\";\r\nimport MediaContentContainer from \"./components/MediaContentContainer/MediaContentContainer\";\r\n\r\nfunction App() {\r\n  const chosenDate = sessionStorage.chosenDate\r\n    ? new Date(Date.parse(sessionStorage.chosenDate)).toLocaleDateString()\r\n    : new Date(new Date().getFullYear(), new Date().getMonth(), 1).toLocaleDateString();\r\n  const [date, getDate] = useState(chosenDate);\r\n  return (\r\n    <div className=\"App\">\r\n      <CalendarContainer getDate={getDate} />\r\n      <MediaContentContainer date={date.split(\".\").reverse().join(\"-\")} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}